import { none, i32, i64, f32, f64 } from "binaryen";

export const builtinData = {
  i32: {
    const: { params: { value: none }, result: i32 },
    clz: { params: { value: i32 }, result: i32 },
    ctz: { params: { value: i32 }, result: i32 },
    popcnt: { params: { value: i32 }, result: i32 },
    eqz: { params: { value: i32 }, result: i32 },
    add: { params: { left: i32, right: i32 }, result: i32 },
    sub: { params: { left: i32, right: i32 }, result: i32 },
    mul: { params: { left: i32, right: i32 }, result: i32 },
    div_s: { params: { left: i32, right: i32 }, result: i32 },
    div_u: { params: { left: i32, right: i32 }, result: i32 },
    rem_s: { params: { left: i32, right: i32 }, result: i32 },
    rem_u: { params: { left: i32, right: i32 }, result: i32 },
    and: { params: { left: i32, right: i32 }, result: i32 },
    or: { params: { left: i32, right: i32 }, result: i32 },
    xor: { params: { left: i32, right: i32 }, result: i32 },
    shl: { params: { left: i32, right: i32 }, result: i32 },
    shr_u: { params: { left: i32, right: i32 }, result: i32 },
    shr_s: { params: { left: i32, right: i32 }, result: i32 },
    rotl: { params: { left: i32, right: i32 }, result: i32 },
    rotr: { params: { left: i32, right: i32 }, result: i32 },
    eq: { params: { left: i32, right: i32 }, result: i32 },
    ne: { params: { left: i32, right: i32 }, result: i32 },
    lt_s: { params: { left: i32, right: i32 }, result: i32 },
    lt_u: { params: { left: i32, right: i32 }, result: i32 },
    le_s: { params: { left: i32, right: i32 }, result: i32 },
    le_u: { params: { left: i32, right: i32 }, result: i32 },
    gt_s: { params: { left: i32, right: i32 }, result: i32 },
    gt_u: { params: { left: i32, right: i32 }, result: i32 },
    ge_s: { params: { left: i32, right: i32 }, result: i32 },
    ge_u: { params: { left: i32, right: i32 }, result: i32 },
    trunc_s: {
      f32: { params: { value: i32 }, result: i32 },
      f64: { params: { value: i32 }, result: i32 },
    },
    trunc_u: {
      f32: { params: { value: i32 }, result: i32 },
      f64: { params: { value: i32 }, result: i32 },
    },
    reinterpret: { params: { value: i32 }, result: i32 },
    wrap: { params: { value: i32 }, result: i32 },
    load: { params: { offset: none, align: none, ptr: i32 }, result: i32 },
    load8_s: { params: { offset: none, align: none, ptr: i32 }, result: i32 },
    load8_u: { params: { offset: none, align: none, ptr: i32 }, result: i32 },
    load16_s: { params: { offset: none, align: none, ptr: i32 }, result: i32 },
    load16_u: { params: { offset: none, align: none, ptr: i32 }, result: i32 },
    store: { params: { offset: none, align: none, ptr: i32, value: i32 }, result: i32 },
    store8: { params: { offset: none, align: none, ptr: i32, value: i32 }, result: i32 },
    store16: { params: { offset: none, align: none, ptr: i32, value: i32 }, result: i32 },
  },

  i64: {
    const: { params: { value: none }, result: i64 },
    clz: { params: { value: i64 }, result: i64 },
    ctz: { params: { value: i64 }, result: i64 },
    popcnt: { params: { value: i64 }, result: i64 },
    eqz: { params: { value: i64 }, result: i64 },
    add: { params: { left: i64, right: i64 }, result: i64 },
    sub: { params: { left: i64, right: i64 }, result: i64 },
    mul: { params: { left: i64, right: i64 }, result: i64 },
    div_s: { params: { left: i64, right: i64 }, result: i64 },
    div_u: { params: { left: i64, right: i64 }, result: i64 },
    rem_s: { params: { left: i64, right: i64 }, result: i64 },
    rem_u: { params: { left: i64, right: i64 }, result: i64 },
    and: { params: { left: i64, right: i64 }, result: i64 },
    or: { params: { left: i64, right: i64 }, result: i64 },
    xor: { params: { left: i64, right: i64 }, result: i64 },
    shl: { params: { left: i64, right: i64 }, result: i64 },
    shr_u: { params: { left: i64, right: i64 }, result: i64 },
    shr_s: { params: { left: i64, right: i64 }, result: i64 },
    rotl: { params: { left: i64, right: i64 }, result: i64 },
    rotr: { params: { left: i64, right: i64 }, result: i64 },
    eq: { params: { left: i64, right: i64 }, result: i64 },
    ne: { params: { left: i64, right: i64 }, result: i64 },
    lt_s: { params: { left: i64, right: i64 }, result: i64 },
    lt_u: { params: { left: i64, right: i64 }, result: i64 },
    le_s: { params: { left: i64, right: i64 }, result: i64 },
    le_u: { params: { left: i64, right: i64 }, result: i64 },
    gt_s: { params: { left: i64, right: i64 }, result: i64 },
    gt_u: { params: { left: i64, right: i64 }, result: i64 },
    ge_s: { params: { left: i64, right: i64 }, result: i64 },
    ge_u: { params: { left: i64, right: i64 }, result: i64 },
    trunc_s: {
      f32: { params: { value: i64 }, result: i64 },
      f64: { params: { value: i64 }, result: i64 },
    },
    trunc_u: {
      f32: { params: { value: i64 }, result: i64 },
      f64: { params: { value: i64 }, result: i64 },
    },
    reinterpret: { params: { value: i64 }, result: i64 },
    extend_s: { params: { value: i64 }, result: i64 },
    extend_u: { params: { value: i64 }, result: i64 },
    load: { params: { offset: none, align: none, ptr: i64 }, result: i64 },
    load8_s: { params: { offset: none, align: none, ptr: i64 }, result: i64 },
    load8_u: { params: { offset: none, align: none, ptr: i64 }, result: i64 },
    load16_s: { params: { offset: none, align: none, ptr: i64 }, result: i64 },
    load16_u: { params: { offset: none, align: none, ptr: i64 }, result: i64 },
    load32_s: { params: { offset: none, align: none, ptr: i64 }, result: i64 },
    load32_u: { params: { offset: none, align: none, ptr: i64 }, result: i64 },
    store: { params: { offset: none, align: none, ptr: i64, value: i64 }, result: i64 },
    store8: { params: { offset: none, align: none, ptr: i64, value: i64 }, result: i64 },
    store16: { params: { offset: none, align: none, ptr: i64, value: i64 }, result: i64 },
    store32: { params: { offset: none, align: none, ptr: i64, value: i64 }, result: i64 },
  },

  f32: {
    const: { params: { value: none }, result: f32 },
    const_bits: { params: { value: none }, result: f32 },
    neg: { params: { value: f32 }, result: f32 },
    abs: { params: { value: f32 }, result: f32 },
    ceil: { params: { value: f32 }, result: f32 },
    floor: { params: { value: f32 }, result: f32 },
    trunc: { params: { value: f32 }, result: f32 },
    nearest: { params: { value: f32 }, result: f32 },
    sqrt: { params: { value: f32 }, result: f32 },
    add: { params: { left: f32, right: f32 }, result: f32 },
    sub: { params: { left: f32, right: f32 }, result: f32 },
    mul: { params: { left: f32, right: f32 }, result: f32 },
    div: { params: { left: f32, right: f32 }, result: f32 },
    copysign: { params: { left: f32, right: f32 }, result: f32 },
    min: { params: { left: f32, right: f32 }, result: f32 },
    max: { params: { left: f32, right: f32 }, result: f32 },
    eq: { params: { left: f32, right: f32 }, result: f32 },
    ne: { params: { left: f32, right: f32 }, result: f32 },
    lt: { params: { left: f32, right: f32 }, result: f32 },
    le: { params: { left: f32, right: f32 }, result: f32 },
    gt: { params: { left: f32, right: f32 }, result: f32 },
    ge: { params: { left: f32, right: f32 }, result: f32 },
    reinterpret: { params: { value: f32 }, result: f32 },
    convert_s: {
      i32: { params: { value: f32 }, result: f32 },
      i64: { params: { value: f32 }, result: f32 },
    },
    convert_u: {
      i32: { params: { value: f32 }, result: f32 },
      i64: { params: { value: f32 }, result: f32 },
    },
    demote: { params: { value: f32 }, result: f32 },
    load: { params: { offset: none, align: none, ptr: f32 }, result: f32 },
    store: { params: { offset: none, align: none, ptr: f32, value: f32 }, result: f32 },
  },

  f64: {
    const: { params: { value: none }, result: f64 },
    const_bits: { params: { value: none }, result: f64 },
    neg: { params: { value: f64 }, result: f64 },
    abs: { params: { value: f64 }, result: f64 },
    ceil: { params: { value: f64 }, result: f64 },
    floor: { params: { value: f64 }, result: f64 },
    trunc: { params: { value: f64 }, result: f64 },
    nearest: { params: { value: f64 }, result: f64 },
    sqrt: { params: { value: f64 }, result: f64 },
    add: { params: { left: f64, right: f64 }, result: f64 },
    sub: { params: { left: f64, right: f64 }, result: f64 },
    mul: { params: { left: f64, right: f64 }, result: f64 },
    div: { params: { left: f64, right: f64 }, result: f64 },
    copysign: { params: { left: f64, right: f64 }, result: f64 },
    min: { params: { left: f64, right: f64 }, result: f64 },
    max: { params: { left: f64, right: f64 }, result: f64 },
    eq: { params: { left: f64, right: f64 }, result: f64 },
    ne: { params: { left: f64, right: f64 }, result: f64 },
    lt: { params: { left: f64, right: f64 }, result: f64 },
    le: { params: { left: f64, right: f64 }, result: f64 },
    gt: { params: { left: f64, right: f64 }, result: f64 },
    ge: { params: { left: f64, right: f64 }, result: f64 },
    reinterpret: { params: { value: f64 }, result: f64 },
    convert_s: {
      i32: { params: { value: f64 }, result: f64 },
      i64: { params: { value: f64 }, result: f64 },
    },
    convert_u: {
      i32: { params: { value: f64 }, result: f64 },
      i64: { params: { value: f64 }, result: f64 },
    },
    promote: { params: { value: f64 }, result: f64 },
    load: { params: { offset: none, align: none, ptr: f64 }, result: f64 },
    store: { params: { offset: none, align: none, ptr: f64, value: f64 }, result: f64 },
  },

  // Host operations
  memory: {
    size: { params: {}, result: i32 },
    grow: { params: { value: none }, result: i32 },
  },
};
